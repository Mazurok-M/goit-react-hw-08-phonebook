{"version":3,"file":"static/js/451.ea110e1f.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.style.jsx","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/contactList.module.css?ddc0","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  width: 500px;\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 30px;\n  padding: 15px;\n  background-color: #301c49;\n  border: 3px solid transparent;\n  border-image: linear-gradient(\n    319deg,\n    rgba(90, 25, 244, 0.71) 0%,\n    rgba(228, 34, 201, 0.71) 37%,\n    rgba(157, 29, 223, 0.71) 71%\n  );\n  border-image-slice: 1;\n  border-radius: 4px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  font-weight: 600;\n`;\n\nexport const FormInput = styled.input`\n  width: 400px;\n  padding: 5px;\n\n  border: 3px solid transparent;\n  border-image: linear-gradient(\n    319deg,\n    rgba(90, 25, 244, 0.71) 0%,\n    rgba(228, 34, 201, 0.71) 37%,\n    rgba(157, 29, 223, 0.71) 71%\n  );\n  border-image-slice: 1;\n`;\n\nexport const Button = styled.button`\n  padding: 2px 12px;\n  width: 150px;\n  font-size: 20px;\n\n  color: #ffffff;\n  background: linear-gradient(\n    98.94deg,\n    rgba(200, 34, 228, 0.4) 2.52%,\n    rgba(87, 25, 244, 0.4) 92.81%\n  );\n  border-radius: 4px;\n  border: 3px solid #55284f;\n\n  :hover,\n  :focus {\n    background: linear-gradient(\n      104.35deg,\n      rgba(184, 86, 219, 0.4) 40.82%,\n      rgba(127, 61, 240, 0.4) 97.24%\n    );\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\n\nimport { Form, FormLabel, FormInput, Button } from './ContactForm.style';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`A contact with the name ${name} already exists`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Button = styled.button`\n  padding: 2px 12px;\n  margin-left: 25px;\n  font-size: 20px;\n\n  color: #ffffff;\n  background: linear-gradient(\n    98.94deg,\n    rgba(200, 34, 228, 0.4) 2.52%,\n    rgba(87, 25, 244, 0.4) 92.81%\n  );\n  border-radius: 4px;\n  border: 3px solid #55284f;\n\n  :hover,\n  :focus {\n    background: linear-gradient(\n      104.35deg,\n      rgba(184, 86, 219, 0.4) 40.82%,\n      rgba(127, 61, 240, 0.4) 97.24%\n    );\n  }\n`;\n\nexport const Name = styled.div`\n  font-size: 18px;\n`;\n","import { useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport { Button, Wrap, Name } from './Contact.styled';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <Wrap>\n      <Name>\n        <span>{contact.name}</span>:<span> {contact.number}</span>\n      </Name>\n\n      <Button type=\"button\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </Wrap>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts__item\":\"contactList_contacts__item__31qch\",\"btn__delete\":\"contactList_btn__delete__tVotW\"};","import { Contact } from 'components/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { selectFilterContacts } from 'redux/contacts/contacts-selectors';\n\nimport css from './contactList.module.css';\n\nexport const ContactList = () => {\n  const filterContacts = useSelector(selectFilterContacts);\n\n  return (\n    <div>\n      {filterContacts.length > 0 && (\n        <ul className={css.contacts}>\n          {filterContacts.map(contact => (\n            <li key={contact.id} className={css.contacts__item}>\n              <Contact contact={contact} />\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterForm = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  font-size: 24px;\n  font-weight: 600;\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  padding: 8px;\n  font-size: 18px;\n\n  margin-bottom: 15px;\n\n  border: 3px solid transparent;\n  border-image: linear-gradient(\n    319deg,\n    rgba(90, 25, 244, 0.71) 0%,\n    rgba(228, 34, 201, 0.71) 37%,\n    rgba(157, 29, 223, 0.71) 71%\n  );\n  border-image-slice: 1;\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/filterSlice';\nimport { FilterForm, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(filterContact(e.currentTarget.value));\n  };\n\n  return (\n    <FilterForm>\n      Find contacts by name\n      <Input type=\"text\" onChange={changeFilter} />\n    </FilterForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  padding-top: 30px;\n  padding-left: 60px;\n  padding-right: 100px;\n  min-height: 100vh;\n`;\nexport const Title = styled.h1`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { Wrap, Title, Box } from './Contacts.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrap>\n      <Title>Contacts</Title>\n      <Box>\n        <div>\n          <Filter />\n          <ContactList />\n        </div>\n        <ContactForm />\n      </Box>\n    </Wrap>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilterContacts","createSelector","filter","normalizeFilter","toLowerCase","contact","name","includes","Form","styled","FormLabel","FormInput","Button","ContactForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","handleChange","target","value","onSubmit","e","preventDefault","form","elements","some","alert","addContact","type","placeholder","onChange","pattern","title","required","Wrap","Name","Contact","onClick","deleteContact","id","ContactList","filterContacts","length","className","css","map","FilterForm","Input","Filter","filterContact","currentTarget","Title","Box","useEffect","fetchContacts"],"sourceRoot":""}