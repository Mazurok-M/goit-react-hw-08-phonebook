{"version":3,"file":"static/js/908.c80f65a9.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/contactList.module.css?ddc0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__label\":\"ContactForm_form__label__8W82B\",\"form__input\":\"ContactForm_form__input__VGD4-\",\"form__btn\":\"ContactForm_form__btn__WXQ4e\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\n\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'number':\n        return setNumber(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (contacts.some(contact => contact.name === name)) {\n      alert(`A contact with the name ${name} already exists`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.form__label}>\n        Name\n        <input\n          className={css.form__input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.form__label}>\n        Number\n        <input\n          className={css.form__input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.form__btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn__delete\":\"Contact_btn__delete__kgw5l\"};","import { useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport css from './Contact.module.css';\nimport { deleteContact } from 'redux/contacts/contacts-operations';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <div>\n      <span className={css.name}>{contact.name}</span>:\n      <span className={css.number}> {contact.number}</span>\n      <button className={css.btn__delete} type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts__item\":\"contactList_contacts__item__31qch\",\"btn__delete\":\"contactList_btn__delete__tVotW\"};","import { Contact } from 'components/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { selectFilterContacts } from 'redux/contacts/contacts-selectors';\n\nimport css from './contactList.module.css';\n\nexport const ContactList = () => {\n  const filterContacts = useSelector(selectFilterContacts);\n\n  return (\n    <div>\n      {filterContacts.length > 0 && (\n        <ul className={css.contacts}>\n          {filterContacts.map(contact => (\n            <li key={contact.id} className={css.contacts__item}>\n              <Contact contact={contact} />\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"filter_filter__HJEMj\",\"filter__iput\":\"filter_filter__iput__4nS4Y\"};","import { useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/filterSlice';\n\nimport css from './filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(filterContact(e.currentTarget.value));\n  };\n\n  return (\n    <label className={css.filter}>\n      Find contacts by name\n      <input className={css.filter__iput} type=\"text\" onChange={changeFilter} />\n    </label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Сторінка контактів</h1>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectFilterContacts","createSelector","filter","normalizeFilter","toLowerCase","contact","name","includes","ContactForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","handleChange","target","value","className","css","onSubmit","e","preventDefault","form","elements","some","alert","addContact","type","onChange","pattern","title","required","Contact","onClick","deleteContact","id","ContactList","filterContacts","length","map","Filter","filterContact","currentTarget","useEffect","fetchContacts"],"sourceRoot":""}